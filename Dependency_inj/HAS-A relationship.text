classes can be related by two types of relationships:
1.Has-a relationship
2.is-a relationship(extend keyword)
Another class reference(dependant object) should be a part of this class(targeted object) reference.
the process of injecting dependant object into targeted object can be known as dependency injection.
instance variable can be initialized in 2 ways:by using constructor and using setters.
we can achieve dependancy injection in two ways:
1.constructor dependancy injection(the process of injecting dependant object into targeted object through constructor can be known as dependency injection.
)
2.setter dependancy injection(the process of injecting dependant object into targeted object through setters can be known as dependency injection.
).
As part of java application development,we use classes(entities as per requirement).to provide optimization,code reusability,efficiency, we need to establish relationship between classes.
three types of relationship:
1.HAS-A relationship(extensively used)
2.is-a relationship(it improves code reusability by inheritance)
3.use-a relationship(not used widely)
communication b/w entitties and data navigation between entities is improved
 using HAS-A relationships as it defines associations between classes.
types of associations in java:
1.1:M(one to many association)
2.M:1
3.M:M
4.1:1
to achieve associations we have to declare single reference or array of reference variables of an entity class in Another entity class.
instance variable is declared in targeted class.
dependant object code should be ready before the targeted object creation.

one to one association:it is a relationship between entities ,where one instance of an entity is exactly mapped to the one instance of another entity.
e.g:every employee must have only one account.

one to many association:it is a relationship between entities where one instance of an entity is mapped to many instances of the other entity.
e.g:one department has many employees.

many to one association:it is a relationship between entities where many instances of an entity is mapped to the one instance of another entity.
e.g:many students join in one branch.

many to many association:it is a relationship between entities where many instances f an entity is mappes to many instances of another entity .
e.g:many students join multiple courses.


